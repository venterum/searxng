name: ci

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

env:
  SOURCE_REPO: searxng/searxng
  SOURCE_REPO_BRANCH: master

jobs:
  check-update-required:
    runs-on: ubuntu-latest
    outputs:
      is-up-to-date: ${{ steps.check-for-changes.outputs.is-up-to-date }}
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Check for remote changes
      id: check-for-changes
      run: |
        if [ "${{ github.event_name }}" != "schedule" ]; then
          echo "This run was triggered by ${GITHUB_EVENT_NAME}. Skipping the job."
          echo "::set-output name=is-up-to-date::false"
          exit 0
        fi
        REMOTE_COMMIT=$(git ls-remote https://github.com/${{ env.SOURCE_REPO }} ${{ env.SOURCE_REPO_BRANCH }} | awk '{print $1}')
        LOCAL_COMMIT=$(grep -m1 "UPSTREAM_COMMIT=" Dockerfile | cut -d'=' -f2)
        echo "Remote commit: $REMOTE_COMMIT"
        echo "Local commit: $LOCAL_COMMIT"
        if [ "$REMOTE_COMMIT" = "$LOCAL_COMMIT" ]; then
          echo "Repository is up to date. Skipping build process."
          echo "::set-output name=is-up-to-date::true"
        else
          echo "Repository is not up to date."
          echo "::set-output name=is-up-to-date::false"
        fi

  update:
    needs: check-update-required
    if: needs.check-update-required.outputs.is-up-to-date == 'false'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Update the SHA sum.
      run: |
        REMOTE_COMMIT=$(git ls-remote https://github.com/${{ env.SOURCE_REPO }} ${{ env.SOURCE_REPO_BRANCH }} | awk '{print $1}')
        sed -i "/^ENV UPSTREAM_COMMIT=/c\\ENV UPSTREAM_COMMIT=${REMOTE_COMMIT}" Dockerfile

    - name: Push changes
      uses: actions-js/push@master
      with:
        author_name: 'github-actions[bot]'
        author_email: '41898282+github-actions[bot]@users.noreply.github.com'
        message: 'upd: latest upstream commit'
        github_token: ${{ secrets.PAT_TOKEN }}
